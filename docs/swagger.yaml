basePath: /
definitions:
  internal_controller.Request:
    properties:
      group:
        type: string
      song:
        type: string
    type: object
  testEffectiveMobile_internal_models.CreateSongResponse:
    properties:
      song_id:
        type: integer
    type: object
  testEffectiveMobile_internal_models.Failures:
    properties:
      error:
        type: string
    type: object
  testEffectiveMobile_internal_models.Song:
    description: песня
    properties:
      group:
        type: string
      id:
        type: integer
      link:
        type: string
      releaseDate:
        type: string
      song:
        type: string
      text:
        type: string
    type: object
  testEffectiveMobile_internal_models.SongWithoutID:
    properties:
      group:
        type: string
      link:
        type: string
      releaseDate:
        type: string
      song:
        type: string
      text:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a test task for Effective Mobile
  title: Test task Effective Mobile API
  version: "1.0"
paths:
  /songs:
    get:
      description: Get a list of songs with filters and pagination
      parameters:
      - description: Group name
        in: query
        name: group
        type: string
      - description: Song name
        in: query
        name: name
        type: string
      - description: Song id
        in: query
        name: id
        type: integer
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Page size
        in: query
        name: page_size
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/testEffectiveMobile_internal_models.Song'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/testEffectiveMobile_internal_models.Failures'
      summary: Get songs with params
    post:
      consumes:
      - application/json
      description: Create a song with enrichment
      parameters:
      - description: Name and group of the song
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/internal_controller.Request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/testEffectiveMobile_internal_models.CreateSongResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/testEffectiveMobile_internal_models.Failures'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/testEffectiveMobile_internal_models.Failures'
      summary: Create song with enrichment
  /songs/{id}:
    delete:
      description: Delete song by id
      parameters:
      - description: Song id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: song deleted
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/testEffectiveMobile_internal_models.Failures'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/testEffectiveMobile_internal_models.Failures'
      summary: Delete song by id
    put:
      consumes:
      - application/json
      description: 'Update song by id. You can provide partial updates, for example
        {"text": "new text"}.'
      parameters:
      - description: Song id
        in: path
        name: id
        required: true
        type: integer
      - description: Partial Song object
        in: body
        name: request
        schema:
          $ref: '#/definitions/testEffectiveMobile_internal_models.SongWithoutID'
      produces:
      - application/json
      responses:
        "200":
          description: song updated
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/testEffectiveMobile_internal_models.Failures'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/testEffectiveMobile_internal_models.Failures'
      summary: Update song by id (partial updates allowed)
  /songs/{id}/verses:
    get:
      description: Get verses by song id with pagination
      parameters:
      - description: Song id
        in: path
        name: id
        required: true
        type: integer
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Page size
        in: query
        name: page_size
        type: integer
      responses:
        "200":
          description: verses
          schema:
            items:
              type: string
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/testEffectiveMobile_internal_models.Failures'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/testEffectiveMobile_internal_models.Failures'
      summary: Get verses by song id
swagger: "2.0"
